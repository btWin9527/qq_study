登录流程：
1. 打开login/backend 运行npm i 下载依赖(该步骤可跳过，压缩包内已经包含依赖)
2. 打开login/backend/app.js  node app.js
3. 打开login/frontend/login.html页面进行登录操作

------------------------------------------------------------------------
现实注册登录
1. 实现node接口（模拟）

注册 拿到参数 -- 检查是否有相同的 -- 保存到数组
登录 拿到参数 -- 循环数组检测是否有相同的账号和密码 -- 返回登录成功


2. 测试接口
工具： postman -- 一个发送http请求的工具，跟浏览器发送请求一样

3. 实现前端逻辑
注册逻辑
登录逻辑
记住  账号密码    localStorage、cookie   存储令牌token

4. 通过http方式访问
安装一个web服务： npm install serve -g
启动服务：在html文件目录运行命令： serve
访问页面： http:localhost:5000/login

----------------------------------------------------------------------

JS进阶作业
【通过id传多个参数】
/data/:one-:two-:xxx
/data/one?name=xxx&age=20

实战：
数据存储  数组
添加
1. 实现接口   在express中实现接口 /data/add
2. 实现前端调用

查询
1. 实现接口   在express中实现接口 /data/query
2. 实现前端调用（查询方式，时间，关键词模糊查询）

删除
1. 实现接口   在express中实现接口  /data/del
2. 实现前端调用，传本条记录id

修改：
1. 实现接口   在express中实现接口 /data/edit
2. 实现前端调用

【*】
jsonp的使用 [使用$.ajax实现]
修改思路：
1. 点击修改按钮 -- 打开一个弹窗（带上id）--- 根据id查找数据并复制给弹层中表单
2. 修改数据 -- 保存 -- 提交数据

第四周作业：
1. 使用同学们提供的登录demo页面
2. 完成一个登录 + 主页 + 后端接口的一个完整功能
3. 封装ajax请求模板


设计模式：

工厂，观察者（发布订阅）,代理

代理设计模式

理解： 真实对象 --- 代理对象 --- 处理请求
代理对象能处理真实对象的需求
场景：

++手机访问电脑页面++
1. 找到本机ip
2. 启动前端服务 serve(npm install serve)
3. 启动接口
4. 访问 http://192.168.1.110:5000/login.html
5. 手机和电脑必须在同一wifi
